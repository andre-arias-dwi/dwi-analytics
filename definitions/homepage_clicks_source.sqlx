config {
  type: "incremental",
  schema: "GA4_reporting",
  name: "dwi_homepage_clicks_source",
  uniqueKey: ["session_id", "brand", "event_category", "event_subcategory", "transaction_id"],
bigquery: {
    partitionBy: "date",
    clusterBy: ["user_pseudo_id", "session_id"]
  }
}

WITH events AS (
    SELECT
        PARSE_DATE('%Y%m%d', event_date) AS date,
        user_pseudo_id,
        CONCAT(user_pseudo_id, (SELECT value.int_value FROM UNNEST(event_params) WHERE key = 'ga_session_id')) AS session_id,
        event_name,
        (SELECT value.string_value FROM UNNEST(event_params) WHERE key = 'event_category') AS event_category,
        (SELECT value.string_value FROM UNNEST(event_params) WHERE key = 'event_subcategory') AS event_subcategory,
        ecommerce.transaction_id,
        ecommerce.purchase_revenue,
        geo.country,
        device.web_info.hostname,
        CASE
            WHEN table_id = 'analytics_287163560' THEN 'LAW'
            WHEN table_id = 'analytics_287832387' THEN 'WSJ'
        END AS brand
    FROM (
        SELECT *, 'analytics_287163560' AS table_id
        FROM `tough-healer-395417.analytics_287163560.events_*`
        WHERE _TABLE_SUFFIX BETWEEN FORMAT_DATE('%Y%m%d', DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)) AND FORMAT_DATE('%Y%m%d', DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY))
        UNION ALL
        SELECT *, 'analytics_287832387' AS table_id
        FROM `tough-healer-395417.analytics_287832387.events_*`
        WHERE _TABLE_SUFFIX BETWEEN FORMAT_DATE('%Y%m%d', DATE_SUB(CURRENT_DATE(), INTERVAL 2 DAY)) AND FORMAT_DATE('%Y%m%d', DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY))
    )
),
sessions AS (
    SELECT DISTINCT
        date,
        user_pseudo_id,
        session_id,
        event_category,
        event_subcategory,
        brand
    FROM events
    WHERE event_name = 'homepage_clicks'
        AND country != 'India'
        AND ((hostname = 'www.laithwaites.com' AND brand = 'LAW') 
             OR (hostname = 'www.wsjwine.com' AND brand = 'WSJ'))
        AND session_id IS NOT NULL
    --GROUP BY ALL
),
purchases AS (
    SELECT DISTINCT
        user_pseudo_id,
        session_id,
        transaction_id,
        purchase_revenue,
        brand
    FROM events
    WHERE event_name = 'purchase'
        AND transaction_id != '(not set)'
)
SELECT
    s.date,
    s.event_category,
    s.event_subcategory,
    s.user_pseudo_id,
    s.session_id,
    s.brand,
    p.transaction_id,
    p.purchase_revenue
FROM sessions s
LEFT JOIN purchases p 
USING(session_id, brand)  -- Join includes brand to avoid mismatches

