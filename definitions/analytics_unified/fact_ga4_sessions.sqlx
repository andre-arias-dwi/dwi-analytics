-- Create a unified sessions table across all GA4 brand datasets
-- Adds brand label and filters by hostnames and country

config {
  type: "table",
  description: "GA4 sessions unioned across all brands, filtered by hostname and enriched with brand.",
  tags: ["fact", "ga4", "sessions"],
  bigquery: {
    partitionBy: "session_date",
    clusterBy: ["session_id"]
  }
}

${(() => {
  // Load brand configuration (hostnames, dataset, property_id, etc.)
  const brands = require("../../includes/brands");

  return `
    SELECT * FROM (
      ${brands.map(b => `
        -- Pull GA4 sessions for one brand
        SELECT
          *,
          '${b.brand}' AS brand

        -- Use dynamic table reference per brand
        FROM ${ref(b.sourceDeclarationName)}

        -- Filter by allowed hostnames for this brand
        WHERE device.web_info.hostname IN (
          ${b.hostname.map(h => `'${h}'`).join(", ")}
        )

        -- Exclude rows based on country (value set via workflow_settings.yaml)
        AND geo.country != '${dataform.projectConfig.vars.excluded_country}'
      `).join("UNION ALL")}  -- Generate the UNION ALL SQL string using .map()
    )
  `;
})()}
